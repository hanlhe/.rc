changelaunchpadlayout() {
    defaults write com.apple.dock springboard-columns -int $1;defaults write com.apple.dock springboard-rows -int $2;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock
}
alias cll=changelaunchpadlayout

scpvm-full() {
    scp -r $1 hanlhe@b4cog92191.ocean.af:/tmp
}
alias scpvm=scpvm-full

makescp-full() {
    make $2 VERSION=$1 && scp build/tet-sensor-$1-$3-linux-amd64.rpm hanlhe@b4cog92191.ocean.af:/tmp
}
alias makescp=makescp-full

alias cdtet="cd ~/go/src/github.com/TetrationAnalytics/tetration/"
alias cdsensor="cd ~/go/src/github.com/TetrationAnalytics/tetration/sensor-go/appliance"
alias cdams="cd ~/workdir/tetration/java/adhoc/scheduler"
alias cdamsgo="cd ~/workdir/tetration/golang/src/tetration/ams"
alias cde2e="cd ~/workdir/tetration/test_framework/src/e2e"

alias gcp="git cherry-pick -x"

erpm-full(){
    rpm2cpio $1 | cpio -idmv
}
alias erpm=erpm-full

replace-rpm() {
    rm -rf /tmp/usr
    erpm $1
    cp /tmp/usr/local/tet-netflow/tet-netflowsensor /usr/local/tet-netflow
}
alias rrpm=replace-rpm

alias startnf='systemctl restart tet-netflowsensor.service'
alias statusnf='systemctl status tet-netflowsensor.service'
alias stopnf='systemctl stop tet-netflowsensor.service'
alias startaws='systemctl restart tet-awsvpclogs-downloader.service'
alias statusaws='systemctl status tet-awsvpclogs-downloader.service'
alias stopaws='systemctl stop tet-awsvpclogs-downloader.service'

function happobat1()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id>";
        return;
    fi
    ssh -t tetter@orch-$1.tetrationanalytics.com "sudo su - tetinstall -c 'ssh happobat-1'"

}


function happobat2()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id>";
        return;
    fi
    ssh -t tetter@orch-$1.tetrationanalytics.com "sudo su - tetinstall -c 'ssh happobat-2'"

}

function turnoff-happobat2-ams()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id>";
        return;
    fi

    ssh -t tetter@orch-$1.tetrationanalytics.com "sudo su - tetinstall -c 'ssh happobat-2 sudo sv stop adhocsched'"

}

function deploy-happobat1-ams()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi
    if [ "$2" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi

    cluster="orch-$1.tetrationanalytics.com"
    ams="happobat-1"
    tmp_loc="/tmp/ams.tmp"

    echo "Copying $2 to cluster $1 -- $ams:/opt/tetration/adhocsched/adhoc-scheduler.jar"

    read "response?Are you sure ? [Y/n] "
    response=${response:l} #tolower
    if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
        scp $2 tetter@$cluster:$tmp_loc
        ssh tetter@$cluster "sudo su - tetinstall -c 'scp $tmp_loc $ams:/tmp'"
    else
        return 1
    fi

    ssh tetter@$cluster "sudo su - tetinstall -c 'ssh $ams sudo mv $tmp_loc  /opt/tetration/adhocsched/adhoc-scheduler.jar'"
    ssh tetter@$cluster "sudo su - tetinstall -c 'ssh $ams sudo sv restart adhocsched'"
}

function deploy-happobat1-aqs()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi
    if [ "$2" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi

    cluster="orch-$1.tetrationanalytics.com"
    ams="happobat-1"
    tmp_loc="/tmp/aqs.tmp"

    echo "Copying $2 to cluster $1 -- $ams:/opt/tetration/appset_query_server/appset-query-server.jar"

    read "response?Are you sure ? [Y/n] "
    response=${response:l} #tolower
    if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
        scp $2 tetter@$cluster:$tmp_loc
        ssh tetter@$cluster "sudo su - tetinstall -c 'scp $tmp_loc $ams:/tmp'"
    else
        return 1
    fi

    ssh tetter@$cluster "sudo su - tetinstall -c 'ssh $ams sudo mv $tmp_loc  /opt/tetration/appset_query_server/appset-query-server.jar'"
    ssh tetter@$cluster "sudo su - tetinstall -c 'ssh $ams sudo sv restart appset_query_server'"
}

function deploy-happobat2-ams()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi
    if [ "$2" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi

    cluster="orch-$1.tetrationanalytics.com"
    ams="happobat-2"
    tmp_loc="/tmp/ams.tmp"

    echo "Copying $2 to cluster $1 -- $ams:/opt/tetration/adhocsched/adhoc-scheduler.jar"

    read "response?Are you sure ? [Y/n] "
    response=${response:l} #tolower
    if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
        scp $2 tetter@$cluster:$tmp_loc
        ssh tetter@$cluster "sudo su - tetinstall -c 'scp $tmp_loc $ams:/tmp'"
    else
        return 1
    fi

    ssh tetter@$cluster "sudo su - tetinstall -c 'ssh $ams sudo mv $tmp_loc  /opt/tetration/adhocsched/adhoc-scheduler.jar'"
    ssh tetter@$cluster "sudo su - tetinstall -c 'ssh $ams sudo sv restart adhocsched'"
}


function deploy-happobat2-aqs()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi
    if [ "$2" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi

    cluster="orch-$1.tetrationanalytics.com"
    ams="happobat-2"
    tmp_loc="/tmp/aqs.tmp"

    echo "Copying $2 to cluster $1 -- $ams:/opt/tetration/appset_query_server/appset-query-server.jar"

    read "response?Are you sure ? [Y/n] "
    response=${response:l} #tolower
    if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
        scp $2 tetter@$cluster:$tmp_loc
        ssh tetter@$cluster "sudo su - tetinstall -c 'scp $tmp_loc $ams:/tmp'"
    else
        return 1
    fi

    ssh tetter@$cluster "sudo su - tetinstall -c 'ssh $ams sudo mv $tmp_loc /opt/tetration/appset_query_server/appset-query-server.jar'"
    ssh tetter@$cluster "sudo su - tetinstall -c 'ssh $ams sudo sv restart appset_query_server'"
}

function mgo()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id>";
        return;
    fi
    ssh -t tetter@orch-$1.tetrationanalytics.com "sudo su - tetinstall -c 'ssh -t mongodb-1 mongo'"

}


function cluster()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id>";
        return;
    fi
    if [ "$2" = "" ]; then
        ssh -t tetter@orch-$1.tetrationanalytics.com "sudo su - tetinstall"
    else
        ssh -t tetter@orch-$1.tetrationanalytics.com "sudo su - tetinstall -c 'ssh $2'"
    fi
}

function clusterScp()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi
    if [ "$2" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id> <binary_to_scp_path>";
        return;
    fi
    scp $2 tetter@orch-$1.tetrationanalytics.com:/tmp/
}


function tunnel()
{
    if [ "$1" = "" ]; then
        echo "Usage: $funcstack[1] <cluster name/id>";
        return;
    fi
    ssh -f -N -L 8090:druid-broker.service.consul:8090 -L 8091:haproxy-internal.service.consul:80 -L 8080:happobat-1:8080 -L 8087:happobat-1:8087 -l tetter orch-$1.tetrationanalytics.com
}

function deploy-happobat-ams() {
    deploy-happobat1-ams $1 $2
    deploy-happobat2-ams $1 $2
}

function mdev()
{
   if [ "$1" = "" ]; then
       echo "Usage: $funcstack[1] <cluster name/id>";
       return;
   fi
   ssh -N -C -vv \
   -L 9196:1.1.1.12:9196 \
   -L 8090:druidHistoricalBroker-1:8090 \
   -L 8889:orchestrator-1:8889 \
   -L 9696:appserver-1:9696 \
   -L 7733:appserver-1:7733 \
   -L 4242:tsdbBosunGrafana-1:4242 \
   -L 8086:happobat-1:8086 \
   -L 8080:happobat-1:8080 \
   -L 8118:appserver-1:8118 \
   -L 38017:mongodb-2:27017 \
   -l tetter orch-$1.tetrationanalytics.com
}
